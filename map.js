// Generated by CoffeeScript 1.3.3
(function() {
  var $gps, destinationMarker, droppedMarker, geocoder, getLocationHandler, image, map, myOptions, pulsatingMarker, startMarker, traceHandler, traceHeadingEnable, watchId;

  watchId = null;

  traceHeadingEnable = false;

  myOptions = (function() {
    var last, lat, lng, zoom;
    if (localStorage['last'] != null) {
      last = JSON.parse(localStorage['last']);
      lat = last.lat;
      lng = last.lng;
      zoom = last.zoom;
    } else {
      lat = 35.660389;
      lng = 139.729225;
      zoom = 14;
    }
    return {
      zoom: zoom,
      center: new google.maps.LatLng(lat, lng),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      disableDefaultUI: true
    };
  })();

  geocoder = new google.maps.Geocoder();

  map = new google.maps.Map(document.getElementById("map"), myOptions);

  window.map = map;

  image = new google.maps.MarkerImage('img/bluedot.png', null, null, new google.maps.Point(8, 8), new google.maps.Size(17, 17));

  pulsatingMarker = null;

  droppedMarker = new google.maps.Marker({
    map: map,
    position: myOptions.center,
    title: 'ドロップされたピン',
    visible: false
  });

  startMarker = null;

  destinationMarker = null;

  google.maps.event.addListener(map, 'click', function(event) {
    droppedMarker.setVisible(true);
    return droppedMarker.setPosition(event.latLng);
  });

  google.maps.event.addListener(map, 'center_changed', function() {
    var pos;
    pos = map.getCenter();
    return localStorage['last'] = JSON.stringify({
      lat: pos.lat(),
      lng: pos.lng(),
      zoom: map.getZoom()
    });
  });

  google.maps.event.addListener(map, 'zoom_changed', function() {
    var pos;
    pos = map.getCenter();
    return localStorage['last'] = JSON.stringify({
      lat: pos.lat(),
      lng: pos.lng(),
      zoom: map.getZoom()
    });
  });

  google.maps.event.addListener(droppedMarker, 'click', function(event) {
    return new google.maps.StreetViewService().getPanoramaByLocation(droppedMarker.getPosition(), 49, getLocationHandler);
  });

  getLocationHandler = function(data, status) {
    var sv, _ref;
    switch (status) {
      case google.maps.StreetViewStatus.OK:
        sv = map.getStreetView();
        sv.setPosition(data.location.latLng);
        droppedMarker.setPosition(data.location.latLng);
        sv.setPov({
          heading: (_ref = map.getHeading()) != null ? _ref : 0,
          pitch: 0,
          zoom: 1
        });
        return sv.setVisible(true);
      case google.maps.StreetViewStatus.ZERO_RESULTS:
        return alert("近くにストリートビューが見つかりませんでした。");
      default:
        return alert("すいません、エラーが起こりました。");
    }
  };

  traceHandler = function(position) {
    var latLng;
    latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
    if (pulsatingMarker) {
      pulsatingMarker.setPosition(latLng);
    } else {
      pulsatingMarker = new google.maps.Marker({
        flat: true,
        icon: image,
        map: map,
        optimized: false,
        position: latLng,
        title: 'I might be here',
        visible: true
      });
    }
    map.setCenter(latLng);
    if (traceHeadingEnable) {
      return map.setHeading(position.coords.heading);
    }
  };

  $('#map').height(window.innerHeight - $('#header').outerHeight(true) - $('#footer').outerHeight(true));

  $gps = $('#gps');

  $gps.data('status', 'normal');

  $gps.on('click', function() {
    switch ($gps.data('status')) {
      case 'normal':
        $gps.addClass('btn-primary');
        traceHeadingEnable = false;
        map.setHeading(0);
        watchId = navigator.geolocation.watchPosition(traceHandler, function(error) {
          return console.log(error.message);
        }, {
          enableHighAccuracy: true,
          timeout: 30000
        });
        return $gps.data('status', 'trace-position');
      case 'trace-position':
        $gps.addClass('disabled');
        $gps.children('i').removeClass('icon-globe');
        $gps.children('i').addClass('icon-hand-up');
        return $gps.data('status', 'trace-heading');
      case 'trace-heading':
        navigator.geolocation.clearWatch(watchId);
        watchId = null;
        map.setHeading(0);
        $gps.removeClass('btn-primary');
        $gps.children('i').removeClass('icon-hand-up');
        $gps.children('i').addClass('icon-globe');
        return $gps.data('status', 'normal');
    }
  });

  $('#address').on('change', function() {
    return geocoder.geocode({
      address: this.value
    }, function(result, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        return map.setCenter(result[0].geometry.location);
      } else {
        return alert(status);
      }
    });
  });

  window.onpagehide = function() {
    var pos;
    if (!watchId) {
      navigator.geolocation.clearWatch(watchId);
    }
    pos = map.getCenter();
    return localStorage['last'] = JSON.stringify({
      lat: pos.lat(),
      lng: pos.lng(),
      zoom: map.getZoom()
    });
  };

}).call(this);
